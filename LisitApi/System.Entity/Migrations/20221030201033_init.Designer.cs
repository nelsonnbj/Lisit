// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SystemTheLastBugSpa.Data;
using SystemTheLastBugSpa.Data;

#nullable disable

namespace SystemTheLastBugSpa.Data.Migrations
{
    [DbContext(typeof(AplicationDataContext))]
    [Migration("20221030201033_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.AcademicApplicant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ApplicantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AwardedScholarshipMcyt")
                        .HasColumnType("bit");

                    b.Property<Guid?>("CareerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Currentcycle")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<bool>("FinishTheCareer")
                        .HasColumnType("bit");

                    b.Property<string>("Highschool")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("Interestedstudyingabroad")
                        .HasColumnType("bit");

                    b.Property<bool>("IsInCollege")
                        .HasColumnType("bit");

                    b.Property<string>("LinkVideo")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("OtherLenguajeYouKnow")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("ReadSpeakWriteEnglish")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("ScheduleStudy")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<Guid?>("UniversityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("WhichCenterStudy")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int?>("YearOfGraduation")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("CareerId");

                    b.HasIndex("UniversityId");

                    b.ToTable("AcademicApplicant");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.AcademicInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CenterDidTheBaccalaureate")
                        .HasMaxLength(170)
                        .HasColumnType("nvarchar(170)");

                    b.Property<string>("CollegeCareer")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Statu")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AcademicInformation");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Active", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Active");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.AdmissionsApplication", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AnouncementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CoodinadorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DependenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InstitutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Request")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Tanda")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AdmissionsApplications");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Announcement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<int>("AttemptQuantity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FailedInAdvanced")
                        .HasColumnType("bit");

                    b.Property<bool>("FailedInBasic1")
                        .HasColumnType("bit");

                    b.Property<bool>("FailedInBasic2")
                        .HasColumnType("bit");

                    b.Property<bool>("FailedInIntermission1")
                        .HasColumnType("bit");

                    b.Property<bool>("FailedInIntermission2")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Graduate")
                        .HasColumnType("bit");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.HasIndex("StatusId");

                    b.ToTable("Announcement");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.AnnouncementRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AcademicApplicantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AnnouncementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicantCertificateId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicantContactEmergencyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ApplicantDocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicantIdentificationCardId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicantWorkInfoId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Comment")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DependenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("HasAcceptedTerms")
                        .HasColumnType("bit");

                    b.Property<Guid>("InstitutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<Guid>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reason")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<bool>("ShowRealStatus")
                        .HasColumnType("bit");

                    b.Property<Guid>("SignedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TandasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AcademicApplicantId");

                    b.HasIndex("ApplicantContactEmergencyId");

                    b.HasIndex("ApplicantDocumentId");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("ApplicantWorkInfoId");

                    b.HasIndex("DependenceId");

                    b.HasIndex("InstitutionId");

                    b.HasIndex("ProvinceId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TandasId");

                    b.ToTable("AnnouncementRequest");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.AnnouncementsProvince", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AnnouncementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AnnouncementId");

                    b.ToTable("AnnouncementsProvince");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.AnnouncementsTeacherProvince", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AnnouncementTeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AnnouncementTeacherId");

                    b.ToTable("AnnouncementsTeacherProvince");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.AnnouncementTeacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DocumentStudy")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AnnouncementTeacher");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Applicant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid>("AnnouncementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDates")
                        .HasColumnType("datetime2");

                    b.Property<string>("CelPhone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DependenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("HomePhone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Identification")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid>("IntitutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Neighborhood")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<Guid?>("NeighborhoodId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PlaceOfBirth")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<Guid>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkPhone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("AnnouncementId");

                    b.HasIndex("Email");

                    b.HasIndex("Identification");

                    b.HasIndex("NeighborhoodId");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Applicant");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ApplicantContactEmergency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ApplicantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneHouse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Relationship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RelationshipId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("RelationshipId");

                    b.ToTable("ApplicantContactEmergencie");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ApplicantDocument", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ApplicantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileType")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Name")
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Uri")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.ToTable("ApplicantDocument");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ApplicantLanguage", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ApplicantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.HasIndex("LanguageId");

                    b.ToTable("ApplicantLanguage");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ApplicantTeacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid>("AnnouncementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDates")
                        .HasColumnType("datetime2");

                    b.Property<string>("CelPhone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Gender")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("HomePhone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Identification")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("LastName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Neighborhood")
                        .HasMaxLength(78)
                        .HasColumnType("nvarchar(78)");

                    b.Property<string>("PlaceOfBirth")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<Guid>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkPhone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("ApplicantTeacher");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ApplicantTeacherAcademic", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ApplicantTeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Career")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CenterDidTheBaccalaureate")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CycleCurrenly")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("ProvinceLabor")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Schedule")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("StudyAtUniversity")
                        .HasColumnType("bit");

                    b.Property<string>("Study_Center")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Tanda")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("University")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("YearGraduated")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ApplicantTeacherAcademic");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ApplicantTeacherContactEmergency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ApplicantTeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FullName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PhoneHouse")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PhoneWork")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Relationship")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ApplicantTeacherContactEmergency");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ApplicantTeacherInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("AllergicAnyMedication")
                        .HasColumnType("bit");

                    b.Property<bool>("AnyMedicalcondition")
                        .HasColumnType("bit");

                    b.Property<Guid>("ApplicantTeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EnglishKnowledge")
                        .HasColumnType("bit");

                    b.Property<bool>("Has_been_previously_evaluated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("WorkedWithUsBefore")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("ApplicantTeacherInformation");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ApplicantWorkInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ApplicantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AreasIwouldLikeWork")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("CompanyInstituteWhereWorks")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("DispositionMobilize")
                        .HasColumnType("bit");

                    b.Property<bool>("Isworking")
                        .HasColumnType("bit");

                    b.Property<string>("KnowledgeComputer")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("KnowledgeLanguageEnglish")
                        .HasMaxLength(75)
                        .HasColumnType("nvarchar(75)");

                    b.Property<string>("Position")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("SalaryPerMonth")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<int>("TimeToDedicateToStudyEnglish")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.ToTable("ApplicantWorkingInfo");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Articles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("TypesArticles")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.AssetDischarge", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Activo")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid>("ApprovedbyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Decription")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("IntitutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NoAssetDischarge")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ReasonsForDischarge")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("RequestedbyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Serie")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AssetDischarges");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.AssignBookToStore", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observation")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("StoreId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TypologyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("StoreId");

                    b.HasIndex("TypologyId");

                    b.ToTable("AssignBookToStore");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Assignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AnnouncementsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("InstitutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ModalitiId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TandasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.AssignmentCenterCoordinator", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AnnouncementsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CoordinatorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DependenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tanda")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AssignmentCenterCoordinators");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.AssignmentCenterSupervisors", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AnnouncementsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DependenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SupervisorsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AssignmentCenterSupervisors");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.AssignmentCenterTechnicians", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AnnouncementsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TechniciansId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AssignmentCenterTechnicians");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.AssignmentCenterTechniciansDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AssignmentCenterTechniciansId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DependenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentCenterTechniciansId");

                    b.ToTable("AssignmentCenterTechniciansDetails");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.AssignmentDependenceTeachers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AnnouncementsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DependenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AssignmentDependenceTeachers");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.AssignmentDependenceTeachersDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AssignmentDependenceTeachersId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentDependenceTeachersId");

                    b.ToTable("AssignmentDependenceTeachersDetails");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.AssignmentStudentsClassroom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Assignment")
                        .HasColumnType("bit");

                    b.Property<int>("Calification")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AssignmentStudentsClassroom");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.AssignmentTeacherChargeCenter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AnnouncementsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DependenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tanda")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid>("TeacherChargeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AssignmentTeacherChargeCenters");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.AssignmentTicketFuel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ApprovedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Concept")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("NoAssignmentTicketFuel")
                        .HasColumnType("int");

                    b.Property<Guid>("ReceivedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("TicketDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AssignmentTicketFuel");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Level")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid>("TypologyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Book");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.BookRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ApprovedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<string>("Observation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuantityRequest")
                        .HasColumnType("int");

                    b.Property<Guid>("RequestedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TypologyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("TypologyId");

                    b.ToTable("BookRequest");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.BookRequestDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("BookRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Level")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("QuantityAfford")
                        .HasColumnType("int");

                    b.Property<int>("QuantityRequest")
                        .HasColumnType("int");

                    b.Property<Guid>("TypologyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookRequestId");

                    b.ToTable("BookRequestDetails");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Brand", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Career", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Career");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Classroom", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid?>("AnnouncementsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Aula")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DependeceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InstitucionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("QuantityAfternoon")
                        .HasColumnType("int");

                    b.Property<int?>("QuantityMorning")
                        .HasColumnType("int");

                    b.Property<int?>("QuantityNight")
                        .HasColumnType("int");

                    b.Property<Guid?>("TandasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("TandasId");

                    b.ToTable("Classroom");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ClassroomTeacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ClassroomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("SubstituteTeacher")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("TeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ClassroomTeacher");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Color", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Color");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ConditionBook", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ConditionBook");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ConfigurationDetailVisitSuperviCenter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ConfigurationQuestionSupervisorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConfigurationVisitSupervisorCenterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Seleccion")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ConfigurationDetailVisitSuperviCenter");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ConfigurationDetailVisitSupervisor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ConfigurationQuestionSupervisorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConfigurationVisitSupervisorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Seleccion")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ConfigurationDetailVisitSupervisor");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ConfigurationQuestionSupervisor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("KindOfInformation")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<string>("Question")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ConfigurationQuestionSupervisor");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ConfigurationQuestionTeacherObservation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Comment")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("ConfigurationVisitSupervisorCenterId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observation")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ConfigurationQuestionTeacherObservation");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ConfigurationVisitSupervisor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AnnouncementsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CoordinadorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DependenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SupervisorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ConfigurationVisitSupervisor");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ConfigurationVisitSupervisorCenter", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AnnouncementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConfigurationVisitSupervisorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CoordinadorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DependenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InstitutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SupervisorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TandasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ConfigurationVisitSupervisorCenter");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Contract", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("File")
                        .HasMaxLength(70)
                        .HasColumnType("nvarchar(70)");

                    b.Property<Guid>("InstitutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ModalidityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RegisteredBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InstitutionId");

                    b.ToTable("Contract");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.CorrectAnswer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ExamQuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ExamenQuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(205)
                        .HasColumnType("nvarchar(205)");

                    b.Property<Guid>("TypeAnswerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExamQuestionId");

                    b.HasIndex("TypeAnswerId");

                    b.ToTable("CorrectAnswer");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Correspondence", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Affair")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfReceipt")
                        .HasColumnType("datetime2");

                    b.Property<string>("File")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Origin")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid>("Receivedby")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Correspondence");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.CorrespondenceConfig", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("TipoDeCorrespondencia")
                        .HasMaxLength(95)
                        .HasColumnType("nvarchar(95)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("CorrespondenceConfig");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.DailyAllowance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DaysofDuration")
                        .HasColumnType("int");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartureFrom")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("DestinationPlace")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Motive")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("NoDailyAllowance")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Position")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<Guid>("RequestedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DailyAllowance");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.DailyAllowanceDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Amount")
                        .HasColumnType("int");

                    b.Property<string>("CategoryDailyAllowance")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DailyAllowanceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UnitAmount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DailyAllowanceDetail");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Dependence", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Acronym")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Adress")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Fee")
                        .HasColumnType("float");

                    b.Property<Guid>("InstitutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ModalityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<Guid>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tandas")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InstitutionId");

                    b.HasIndex("ModalityId");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("ProvinceId");

                    b.ToTable("Dependence");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.DischargeBook", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ConditionBookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Level")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Observation")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("QuantityAfford")
                        .HasColumnType("int");

                    b.Property<int>("QuantityRequest")
                        .HasColumnType("int");

                    b.Property<Guid>("TypologyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("ConditionBookId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("TypologyId");

                    b.ToTable("DischargeBook");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.DischargeBookRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ApprovedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.Property<Guid>("RequestedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DischargeBookRequest");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.DischargeBookRequestDischargeBook", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DischargeBookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DischargeBookRequestId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DischargeBookId");

                    b.HasIndex("DischargeBookRequestId");

                    b.ToTable("DischargeBookRequestDischargeBook");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.DispatchofMaterials", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DependenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("DispatchEmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DispatchNo")
                        .HasColumnType("int");

                    b.Property<Guid>("RequestsEmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("RequestsNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DispatchofMaterials");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.DispatchofMaterialsDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ArticleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DispatchofMaterialsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("DispatchofQuantity")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DispatchofMaterialsId");

                    b.ToTable("DispatchofMaterialsDetails");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Documents", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileType")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Uri")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("Id");

                    b.ToTable("Documents");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.DocumentType", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DocumentType");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.DocumentUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DocumentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TypeUser")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("User")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("DocumentUser");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.DownloadBook", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("BookCondition")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Observation")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("TypologyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("DownloadBook");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("BirthDates")
                        .HasColumnType("datetime2");

                    b.Property<string>("CelPhone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmailInstution")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeesRegion")
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.Property<string>("Gender")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("HomePhone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Identification")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("IsUser")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("NeighborhoodId")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("PlaceOfBirth")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<Guid>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("WorkPhone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.EmployeeCondicion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("EnglishKnowledge")
                        .HasColumnType("bit");

                    b.Property<bool>("MedicalAlérgico")
                        .HasColumnType("bit");

                    b.Property<bool>("MedicalCondition")
                        .HasColumnType("bit");

                    b.Property<bool>("PreviouslyWorkedWithUs")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EmployeeCondicion");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.EmployeeContactEmergency", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("FullName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PhoneHouse")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PhoneWork")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Relationship")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EmployeeContactEmergency");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.EmployeeRemovel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reasons")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EmployeeRemovel");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.EmployeeStudies", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("File")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InstitutionWheretoStudy")
                        .HasMaxLength(115)
                        .HasColumnType("nvarchar(115)");

                    b.Property<string>("Obtainedtitle")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Year")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EmployeeStudies");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Evaluation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AnnouncementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DependenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("InstitutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("LevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AnnouncementId");

                    b.HasIndex("DependenceId");

                    b.HasIndex("InstitutionId");

                    b.HasIndex("LevelId");

                    b.ToTable("Evaluation");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.EvaluationTeacher", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AnnouncementTeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProvinceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("RolId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EvaluationTeacher");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Exam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CountQuestion")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExamCategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Level")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid>("NarrativeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("ExamCategoryId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("NarrativeId");

                    b.ToTable("Exam");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ExamCategory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid>("NarrativeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("NarrativeId");

                    b.ToTable("ExamCategory");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ExamQuestion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("BookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Level")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid?>("LevelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("NameFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("NarrativeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Question")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Reading")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UrlFile")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("LevelId");

                    b.HasIndex("NarrativeId");

                    b.ToTable("ExamQuestions");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.FixedAsset", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ActiveId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Area")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("BrandId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ColorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CondicionActive")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Location")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ModelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nature")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("NoFixedAsset")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Observation")
                        .HasMaxLength(205)
                        .HasColumnType("nvarchar(205)");

                    b.Property<string>("Serie")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid>("TypologyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("register")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("FixedAsset");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Institution", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Abbreviation")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Institucion");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("File")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InstitutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("InvoiceNo")
                        .HasColumnType("int");

                    b.Property<Guid>("RegisteredBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("InstitutionId");

                    b.ToTable("Invoice");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid>("EvaluationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Percentage")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EvaluationId");

                    b.ToTable("Item");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.JobTransferRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("Applicationdate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Observation")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("WorkunitRequestedWorkAreaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WorkunitWorkAreaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("schedule")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("stateId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("JobTransferRequest");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.LaboratoryReview", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("AireFuncional")
                        .HasColumnType("bit");

                    b.Property<bool>("BlackboardAvailable")
                        .HasColumnType("bit");

                    b.Property<int>("CpuWorking")
                        .HasColumnType("int");

                    b.Property<int>("Cpudamaged")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DependenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("FunctionalRed")
                        .HasColumnType("bit");

                    b.Property<bool>("IfTechnical")
                        .HasColumnType("bit");

                    b.Property<bool>("InternetDisponible")
                        .HasColumnType("bit");

                    b.Property<Guid>("IntitutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Keyboarddamaged")
                        .HasColumnType("int");

                    b.Property<int>("KeyboardsWorking")
                        .HasColumnType("int");

                    b.Property<int>("MonitorWorking")
                        .HasColumnType("int");

                    b.Property<int>("Monitordamaged")
                        .HasColumnType("int");

                    b.Property<int>("MouseWorking")
                        .HasColumnType("int");

                    b.Property<int>("Mousedamaged")
                        .HasColumnType("int");

                    b.Property<int>("NoLaboratoryReview")
                        .HasColumnType("int");

                    b.Property<string>("Observation")
                        .HasMaxLength(205)
                        .HasColumnType("nvarchar(205)");

                    b.Property<int>("Period")
                        .HasColumnType("int");

                    b.Property<int>("ProyectorWorking")
                        .HasColumnType("int");

                    b.Property<int>("Proyectordamaged")
                        .HasColumnType("int");

                    b.Property<bool>("StableElectrical")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UpsWorking")
                        .HasColumnType("int");

                    b.Property<int>("Upsdamaged")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LaboratoryReview");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.LaborData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("CentroPrivado")
                        .HasMaxLength(205)
                        .HasColumnType("nvarchar(205)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfAdmissionBefore")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LaborUnitDepartment")
                        .HasMaxLength(205)
                        .HasColumnType("nvarchar(205)");

                    b.Property<string>("OccupationalGroup")
                        .HasMaxLength(205)
                        .HasColumnType("nvarchar(205)");

                    b.Property<Guid>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Salary")
                        .HasColumnType("int");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tanda")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("kindOfPerson")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.HasKey("Id");

                    b.ToTable("LaborData");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.LaborDatePrevious", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureDateBefore")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("InputDateBefore")
                        .HasColumnType("datetime2");

                    b.Property<string>("NameOfInstitution")
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.Property<string>("Position")
                        .HasMaxLength(59)
                        .HasColumnType("nvarchar(59)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LaborDatePrevious");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.LaborResignation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Observation")
                        .HasMaxLength(205)
                        .HasColumnType("nvarchar(205)");

                    b.Property<string>("ResignApprove")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LaborResignation");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Language");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Level", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AnnouncementId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DependenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("FinalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaximumHours")
                        .HasColumnType("int");

                    b.Property<int>("MinimumNote")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AnnouncementId");

                    b.HasIndex("DependenceId");

                    b.HasIndex("StatusId");

                    b.ToTable("Level");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Location", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Maintenance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Maintenance");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.MaintenanceRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("IntitutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("MaintenanceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NoMaintenanceRequest")
                        .HasColumnType("int");

                    b.Property<string>("Observation")
                        .HasMaxLength(205)
                        .HasColumnType("nvarchar(205)");

                    b.Property<string>("ObservationsOfEnc")
                        .HasMaxLength(205)
                        .HasColumnType("nvarchar(205)");

                    b.Property<Guid>("ProcessedbyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RequestedbyId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MaintenanceRequest");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.MaterialSourcing", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("NumberRequest")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MaterialSourcing");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.MaterialSourcingDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ArticleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("MaterialSourcingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("MaterialSourcingId");

                    b.ToTable("MaterialSourcingDetails");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Modality", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Modality");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Module", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Modules");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ModuleRolPermissions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModuleId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RolPermissionIdId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ModuleRolPermissions");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.MultipleAnswer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExamenQuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("MultipleAnswer");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Narrative", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("LanguageId");

                    b.ToTable("Narrative");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Nature", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Nature");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Neighborhood", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(95)
                        .HasColumnType("nvarchar(95)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Neighborhood");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.PerdiemandTravel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DaysofDuration")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DepartureDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DepartureFrom")
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<string>("DestinationPlace")
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<string>("NoPerdiemandTravel")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Reason")
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<Guid>("Receivedby")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Requestedby")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("departuretime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("PositionId");

                    b.ToTable("PerdiemandTravel");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.PerdiemandTravelDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PerdiemCategory")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid>("PerdiemandTravelDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PerdiemandTravelId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("UnitAmount")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("amount")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PerdiemandTravelId");

                    b.ToTable("PerdiemandTravelDetails");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.PettyCash", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BalanceBefore")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Concept")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<int?>("Currency")
                        .HasColumnType("int");

                    b.Property<decimal>("CurrentBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Establishment")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int?>("Number")
                        .HasColumnType("int");

                    b.Property<int>("OperationType")
                        .HasColumnType("int");

                    b.Property<int?>("ReceiptNo")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PettyCash");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.PettyCashBalance", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalSpent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("PettyCashBalance");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Position", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("GrupoOcupacional")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Name")
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Pre_selection_Applicant", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Commit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("OralExam")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("Seleccion")
                        .HasColumnType("bit");

                    b.Property<Guid>("TeacherApplicantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Pre_selection_Applicant");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Province", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Province");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ProvinceAsigment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AssignmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AssignmentId");

                    b.ToTable("ProvinceAsigment");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.QuestionAssignedExam", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ExamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ExamQuestionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ExamId");

                    b.ToTable("QuestionAssignedExam");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Ratings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EvaluationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.RatingsDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ItemId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("RatingsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RatingsId");

                    b.ToTable("RatingsDetails");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("AddedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRevorked")
                        .HasColumnType("bit");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("bit");

                    b.Property<string>("JwtId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RolesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("UsersId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RolesId");

                    b.HasIndex("UsersId");

                    b.ToTable("RefreshToken");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.RegistrationQuestionsSupervisor", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Answers")
                        .HasMaxLength(205)
                        .HasColumnType("nvarchar(205)");

                    b.Property<string>("Comment")
                        .HasMaxLength(205)
                        .HasColumnType("nvarchar(205)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Question")
                        .HasMaxLength(205)
                        .HasColumnType("nvarchar(205)");

                    b.Property<string>("TypeOfInformation")
                        .HasMaxLength(205)
                        .HasColumnType("nvarchar(205)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RegistrationQuestionsSupervisor");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Relationship", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Relationship");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Replacement", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("NoReplacement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Replacement");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.RepresentativeDependences", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Cellphone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DependenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("FullName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Place")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .HasMaxLength(45)
                        .HasColumnType("nvarchar(45)");

                    b.Property<string>("Telephone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("WorkAreaId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("DependenceId");

                    b.HasIndex("WorkAreaId");

                    b.ToTable("RepresentativeDependence");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.RequestDownloadBook", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ApprovedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DownloadBookId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Intitution")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NoRequestDownloadBook")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("QuantityDownload")
                        .HasColumnType("int");

                    b.Property<int>("QuantityRequestedDownload")
                        .HasColumnType("int");

                    b.Property<Guid>("RequestedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("State")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RequestDownloadBook");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.RequestTranfers", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<bool>("CalculationRequest")
                        .HasColumnType("bit");

                    b.Property<Guid>("CoordinadorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("Level")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("Madeby")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("RequestMade")
                        .HasColumnType("bit");

                    b.Property<string>("TypeRequest")
                        .HasMaxLength(55)
                        .HasColumnType("nvarchar(55)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RequestTranfers");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Roles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.RolPermissions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("PermissionsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("RolId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RolPermissions");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Schedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DependenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Shift")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid>("TandasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DependenceId");

                    b.HasIndex("TandasId");

                    b.ToTable("Schedule");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.SelectionAvailable", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("AnnouncementsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Available")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DependenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Fee")
                        .HasColumnType("float");

                    b.Property<Guid>("ModalityId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Overfill")
                        .HasColumnType("int");

                    b.Property<int>("OverfillAvailable")
                        .HasColumnType("int");

                    b.Property<int>("Quotas")
                        .HasColumnType("int");

                    b.Property<string>("Schedule")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TandasId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DependenceId");

                    b.HasIndex("ModalityId");

                    b.HasIndex("StatusId");

                    b.HasIndex("TandasId");

                    b.ToTable("SelectionAvailable");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Status", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Store", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Address")
                        .HasMaxLength(205)
                        .HasColumnType("nvarchar(205)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("DependenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("InstitutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("DependenceId");

                    b.HasIndex("InstitutionId");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.StudenAssignment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ClassroomId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("StudenAssignmentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ClassroomId");

                    b.ToTable("StudenAssignment");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.StudentTransfer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DependenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Observation")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Tanda")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("TypeOfTranfer")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("StudentTransfer");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.StudentTransferDetails", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateAproveRequest")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StatusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StudentTransferId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("StudentTransferId");

                    b.ToTable("StudentTransferDetails");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Tandas", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Tanda");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.TeacherEvaluationItem", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(205)
                        .HasColumnType("nvarchar(205)");

                    b.Property<Guid>("EvaluationTeacherId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Percent")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EvaluationTeacherId");

                    b.ToTable("TeacherEvaluationItem");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.TrainingAssimentsPersonal", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Observation")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Participe")
                        .HasColumnType("bit");

                    b.Property<Guid>("TrainingsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TrainingAssimentsPersonal");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.TrainingEvent", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Observation")
                        .HasMaxLength(205)
                        .HasColumnType("nvarchar(205)");

                    b.Property<bool>("Participe")
                        .HasColumnType("bit");

                    b.Property<Guid>("TrainingId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TrainingEvents");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Trainings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Activity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("AnnouncementsId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Conferences")
                        .HasMaxLength(205)
                        .HasColumnType("nvarchar(205)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("DepedenceId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Hour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("InstitutionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("KindOfPerson")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("NameActivity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Place")
                        .HasMaxLength(205)
                        .HasColumnType("nvarchar(205)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Trainings");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.TransferRequest", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<Guid>("ApplicantId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateEffective")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Gender")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Hour")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<string>("LaborUnit")
                        .HasMaxLength(205)
                        .HasColumnType("nvarchar(205)");

                    b.Property<string>("Observation")
                        .HasMaxLength(205)
                        .HasColumnType("nvarchar(205)");

                    b.Property<string>("PlaceOfBirth")
                        .HasMaxLength(205)
                        .HasColumnType("nvarchar(205)");

                    b.Property<Guid>("Position")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ApplicantId");

                    b.ToTable("TransferRequest");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.TravelAmounts", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Accommodation")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Breakfast")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Dinner")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Lunch")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid>("PositionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TravelAmounts");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.TypeAnswer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(205)
                        .HasColumnType("nvarchar(205)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TypeAnswer");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.TypesArticles", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("TypesArticles");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Typology", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Typology");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.University", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Universitiy");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Users", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<bool>("CompletedForm")
                        .HasColumnType("bit");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("FirstLogin")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<Guid>("RolesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("RolesId");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.WorkArea", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreateAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("WorkArea");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<System.Guid>", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Roles", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<System.Guid>", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<System.Guid>", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<System.Guid>", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Roles", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<System.Guid>", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Users", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.AcademicApplicant", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Applicant", null)
                        .WithMany("AcademicApplicant")
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Career", null)
                        .WithMany("AcademicApplicant")
                        .HasForeignKey("CareerId");

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.University", null)
                        .WithMany("AcademicApplicant")
                        .HasForeignKey("UniversityId");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Announcement", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Language", null)
                        .WithMany("Announcement")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Status", null)
                        .WithMany("Announcement")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.AnnouncementRequest", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.AcademicApplicant", null)
                        .WithMany("AnnouncementRequest")
                        .HasForeignKey("AcademicApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.ApplicantContactEmergency", null)
                        .WithMany("AnnouncementRequest")
                        .HasForeignKey("ApplicantContactEmergencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.ApplicantDocument", null)
                        .WithMany("AnnouncementRequest")
                        .HasForeignKey("ApplicantDocumentId");

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Applicant", null)
                        .WithMany("AnnouncementRequest")
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.ApplicantWorkInfo", null)
                        .WithMany("AnnouncementRequest")
                        .HasForeignKey("ApplicantWorkInfoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Dependence", null)
                        .WithMany("AnnouncementRequest")
                        .HasForeignKey("DependenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Institution", null)
                        .WithMany("AnnouncementRequest")
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Province", null)
                        .WithMany("AnnouncementRequest")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Status", null)
                        .WithMany("AnnouncementRequest")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Tandas", null)
                        .WithMany("AnnouncementRequest")
                        .HasForeignKey("TandasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.AnnouncementsProvince", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Announcement", null)
                        .WithMany("AnnouncementsProvince")
                        .HasForeignKey("AnnouncementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.AnnouncementsTeacherProvince", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.AnnouncementTeacher", null)
                        .WithMany("AnnouncementsTeacherProvinces")
                        .HasForeignKey("AnnouncementTeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Applicant", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Announcement", null)
                        .WithMany("Applicant")
                        .HasForeignKey("AnnouncementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Neighborhood", null)
                        .WithMany("Applicant")
                        .HasForeignKey("NeighborhoodId");

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Province", null)
                        .WithMany("Applicant")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ApplicantContactEmergency", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Applicant", null)
                        .WithMany("ApplicantContactEmergency")
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Relationship", null)
                        .WithMany("ApplicantContactEmergency")
                        .HasForeignKey("RelationshipId");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ApplicantDocument", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Applicant", null)
                        .WithMany("ApplicantDocument")
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ApplicantLanguage", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Applicant", null)
                        .WithMany("ApplicantLanguage")
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Language", null)
                        .WithMany("ApplicantLanguage")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ApplicantWorkInfo", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Applicant", null)
                        .WithMany("ApplicantWorkInfo")
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.AssignBookToStore", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Book", null)
                        .WithMany("AssignBookToStore")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Store", null)
                        .WithMany("AssignBookToStore")
                        .HasForeignKey("StoreId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Typology", null)
                        .WithMany("AssignBookToStore")
                        .HasForeignKey("TypologyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.AssignmentCenterTechniciansDetails", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.AssignmentCenterTechnicians", null)
                        .WithMany("AssignmentCenterTechniciansDetails")
                        .HasForeignKey("AssignmentCenterTechniciansId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.AssignmentDependenceTeachersDetails", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.AssignmentDependenceTeachers", null)
                        .WithMany("AssignmentDependenceTeachersDetails")
                        .HasForeignKey("AssignmentDependenceTeachersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.BookRequest", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Book", null)
                        .WithMany("BookRequest")
                        .HasForeignKey("BookId");

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Language", null)
                        .WithMany("BookRequest")
                        .HasForeignKey("LanguageId");

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Typology", null)
                        .WithMany("BookRequest")
                        .HasForeignKey("TypologyId");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.BookRequestDetails", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.BookRequest", null)
                        .WithMany("BookRequestDetails")
                        .HasForeignKey("BookRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Classroom", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Tandas", null)
                        .WithMany("Classroom")
                        .HasForeignKey("TandasId");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Contract", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Institution", null)
                        .WithMany("Contract")
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.CorrectAnswer", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.ExamQuestion", null)
                        .WithMany("CorrectAnswer")
                        .HasForeignKey("ExamQuestionId");

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.TypeAnswer", null)
                        .WithMany("CorrectAnswer")
                        .HasForeignKey("TypeAnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Dependence", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Institution", null)
                        .WithMany("Dependence")
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Modality", null)
                        .WithMany("Dependence")
                        .HasForeignKey("ModalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Province", null)
                        .WithMany("Dependence")
                        .HasForeignKey("ProvinceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.DischargeBook", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Book", null)
                        .WithMany("DischargeBook")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.ConditionBook", null)
                        .WithMany("DischargeBook")
                        .HasForeignKey("ConditionBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Language", null)
                        .WithMany("DischargeBook")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Typology", null)
                        .WithMany("DischargeBook")
                        .HasForeignKey("TypologyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.DischargeBookRequestDischargeBook", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.DischargeBook", null)
                        .WithMany("DischargeBookRequestDischargeBook")
                        .HasForeignKey("DischargeBookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.DischargeBookRequest", null)
                        .WithMany("DischargeBookRequestDischargeBook")
                        .HasForeignKey("DischargeBookRequestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.DispatchofMaterialsDetails", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.DispatchofMaterials", null)
                        .WithMany("DispatchofMaterialsDetails")
                        .HasForeignKey("DispatchofMaterialsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Evaluation", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Announcement", null)
                        .WithMany("Evaluation")
                        .HasForeignKey("AnnouncementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Dependence", null)
                        .WithMany("Evaluation")
                        .HasForeignKey("DependenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Institution", null)
                        .WithMany("Evaluation")
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Level", null)
                        .WithMany("Evaluation")
                        .HasForeignKey("LevelId");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Exam", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Book", null)
                        .WithMany("Exam")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.ExamCategory", null)
                        .WithMany("Exam")
                        .HasForeignKey("ExamCategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Language", null)
                        .WithMany("Exam")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Narrative", null)
                        .WithMany("Exam")
                        .HasForeignKey("NarrativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ExamCategory", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Book", null)
                        .WithMany("ExamCategory")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Language", null)
                        .WithMany("ExamCategory")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Narrative", null)
                        .WithMany("ExamCategory")
                        .HasForeignKey("NarrativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ExamQuestion", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Book", null)
                        .WithMany("ExamQuestion")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Language", null)
                        .WithMany("ExamQuestion")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Level", null)
                        .WithMany("ExamQuestion")
                        .HasForeignKey("LevelId");

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Narrative", null)
                        .WithMany("ExamQuestion")
                        .HasForeignKey("NarrativeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Invoice", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Institution", "Institution")
                        .WithMany("Invoice")
                        .HasForeignKey("InstitutionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Institution");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Item", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Evaluation", null)
                        .WithMany("Item")
                        .HasForeignKey("EvaluationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Level", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Announcement", null)
                        .WithMany("Level")
                        .HasForeignKey("AnnouncementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Dependence", null)
                        .WithMany("Level")
                        .HasForeignKey("DependenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Status", null)
                        .WithMany("Level")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.MaterialSourcingDetails", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.MaterialSourcing", null)
                        .WithMany("MaterialSourcingDetails")
                        .HasForeignKey("MaterialSourcingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Narrative", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Language", null)
                        .WithMany("Narrative")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.PerdiemandTravel", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.PerdiemandTravelDetails", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.PerdiemandTravel", null)
                        .WithMany("PerdiemandTravelDetails")
                        .HasForeignKey("PerdiemandTravelId");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ProvinceAsigment", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Assignment", "Assignment")
                        .WithMany("ProvinceAsigments")
                        .HasForeignKey("AssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignment");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.QuestionAssignedExam", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Exam", null)
                        .WithMany("QuestionAssignedExam")
                        .HasForeignKey("ExamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.RatingsDetails", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Ratings", null)
                        .WithMany("RatingsDetails")
                        .HasForeignKey("RatingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.RefreshToken", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Roles", null)
                        .WithMany("RefreshToken")
                        .HasForeignKey("RolesId");

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Users", null)
                        .WithMany("RefreshToken")
                        .HasForeignKey("UsersId");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.RepresentativeDependences", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Dependence", null)
                        .WithMany("RepresentativeDependence")
                        .HasForeignKey("DependenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.WorkArea", null)
                        .WithMany("RepresentativeDependences")
                        .HasForeignKey("WorkAreaId");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Schedule", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Dependence", "Dependence")
                        .WithMany("Schedule")
                        .HasForeignKey("DependenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Tandas", "Tandas")
                        .WithMany()
                        .HasForeignKey("TandasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Dependence");

                    b.Navigation("Tandas");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.SelectionAvailable", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Dependence", null)
                        .WithMany("SelectionAvailable")
                        .HasForeignKey("DependenceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Modality", null)
                        .WithMany("SelectionAvailable")
                        .HasForeignKey("ModalityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Status", null)
                        .WithMany("SelectionAvailable")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Tandas", null)
                        .WithMany("SelectionAvailable")
                        .HasForeignKey("TandasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Store", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Dependence", null)
                        .WithMany("Store")
                        .HasForeignKey("DependenceId");

                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Institution", null)
                        .WithMany("Store")
                        .HasForeignKey("InstitutionId");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.StudenAssignment", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Classroom", null)
                        .WithMany("StudenAssignments")
                        .HasForeignKey("ClassroomId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.StudentTransferDetails", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.StudentTransfer", null)
                        .WithMany("StudentTransferDetails")
                        .HasForeignKey("StudentTransferId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.TeacherEvaluationItem", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.EvaluationTeacher", null)
                        .WithMany("TeacherEvaluationItem")
                        .HasForeignKey("EvaluationTeacherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.TransferRequest", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Applicant", "Applicant")
                        .WithMany()
                        .HasForeignKey("ApplicantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Applicant");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Users", b =>
                {
                    b.HasOne("SystemTheLastBugSpa.Data.Entity.Roles", null)
                        .WithMany("Users")
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.AcademicApplicant", b =>
                {
                    b.Navigation("AnnouncementRequest");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Announcement", b =>
                {
                    b.Navigation("AnnouncementsProvince");

                    b.Navigation("Applicant");

                    b.Navigation("Evaluation");

                    b.Navigation("Level");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.AnnouncementTeacher", b =>
                {
                    b.Navigation("AnnouncementsTeacherProvinces");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Applicant", b =>
                {
                    b.Navigation("AcademicApplicant");

                    b.Navigation("AnnouncementRequest");

                    b.Navigation("ApplicantContactEmergency");

                    b.Navigation("ApplicantDocument");

                    b.Navigation("ApplicantLanguage");

                    b.Navigation("ApplicantWorkInfo");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ApplicantContactEmergency", b =>
                {
                    b.Navigation("AnnouncementRequest");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ApplicantDocument", b =>
                {
                    b.Navigation("AnnouncementRequest");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ApplicantWorkInfo", b =>
                {
                    b.Navigation("AnnouncementRequest");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Assignment", b =>
                {
                    b.Navigation("ProvinceAsigments");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.AssignmentCenterTechnicians", b =>
                {
                    b.Navigation("AssignmentCenterTechniciansDetails");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.AssignmentDependenceTeachers", b =>
                {
                    b.Navigation("AssignmentDependenceTeachersDetails");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Book", b =>
                {
                    b.Navigation("AssignBookToStore");

                    b.Navigation("BookRequest");

                    b.Navigation("DischargeBook");

                    b.Navigation("Exam");

                    b.Navigation("ExamCategory");

                    b.Navigation("ExamQuestion");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.BookRequest", b =>
                {
                    b.Navigation("BookRequestDetails");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Career", b =>
                {
                    b.Navigation("AcademicApplicant");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Classroom", b =>
                {
                    b.Navigation("StudenAssignments");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ConditionBook", b =>
                {
                    b.Navigation("DischargeBook");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Dependence", b =>
                {
                    b.Navigation("AnnouncementRequest");

                    b.Navigation("Evaluation");

                    b.Navigation("Level");

                    b.Navigation("RepresentativeDependence");

                    b.Navigation("Schedule");

                    b.Navigation("SelectionAvailable");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.DischargeBook", b =>
                {
                    b.Navigation("DischargeBookRequestDischargeBook");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.DischargeBookRequest", b =>
                {
                    b.Navigation("DischargeBookRequestDischargeBook");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.DispatchofMaterials", b =>
                {
                    b.Navigation("DispatchofMaterialsDetails");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Evaluation", b =>
                {
                    b.Navigation("Item");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.EvaluationTeacher", b =>
                {
                    b.Navigation("TeacherEvaluationItem");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Exam", b =>
                {
                    b.Navigation("QuestionAssignedExam");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ExamCategory", b =>
                {
                    b.Navigation("Exam");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.ExamQuestion", b =>
                {
                    b.Navigation("CorrectAnswer");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Institution", b =>
                {
                    b.Navigation("AnnouncementRequest");

                    b.Navigation("Contract");

                    b.Navigation("Dependence");

                    b.Navigation("Evaluation");

                    b.Navigation("Invoice");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Language", b =>
                {
                    b.Navigation("Announcement");

                    b.Navigation("ApplicantLanguage");

                    b.Navigation("BookRequest");

                    b.Navigation("DischargeBook");

                    b.Navigation("Exam");

                    b.Navigation("ExamCategory");

                    b.Navigation("ExamQuestion");

                    b.Navigation("Narrative");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Level", b =>
                {
                    b.Navigation("Evaluation");

                    b.Navigation("ExamQuestion");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.MaterialSourcing", b =>
                {
                    b.Navigation("MaterialSourcingDetails");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Modality", b =>
                {
                    b.Navigation("Dependence");

                    b.Navigation("SelectionAvailable");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Narrative", b =>
                {
                    b.Navigation("Exam");

                    b.Navigation("ExamCategory");

                    b.Navigation("ExamQuestion");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Neighborhood", b =>
                {
                    b.Navigation("Applicant");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.PerdiemandTravel", b =>
                {
                    b.Navigation("PerdiemandTravelDetails");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Province", b =>
                {
                    b.Navigation("AnnouncementRequest");

                    b.Navigation("Applicant");

                    b.Navigation("Dependence");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Ratings", b =>
                {
                    b.Navigation("RatingsDetails");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Relationship", b =>
                {
                    b.Navigation("ApplicantContactEmergency");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Roles", b =>
                {
                    b.Navigation("RefreshToken");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Status", b =>
                {
                    b.Navigation("Announcement");

                    b.Navigation("AnnouncementRequest");

                    b.Navigation("Level");

                    b.Navigation("SelectionAvailable");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Store", b =>
                {
                    b.Navigation("AssignBookToStore");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.StudentTransfer", b =>
                {
                    b.Navigation("StudentTransferDetails");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Tandas", b =>
                {
                    b.Navigation("AnnouncementRequest");

                    b.Navigation("Classroom");

                    b.Navigation("SelectionAvailable");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.TypeAnswer", b =>
                {
                    b.Navigation("CorrectAnswer");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Typology", b =>
                {
                    b.Navigation("AssignBookToStore");

                    b.Navigation("BookRequest");

                    b.Navigation("DischargeBook");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.University", b =>
                {
                    b.Navigation("AcademicApplicant");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.Users", b =>
                {
                    b.Navigation("RefreshToken");
                });

            modelBuilder.Entity("SystemTheLastBugSpa.Data.Entity.WorkArea", b =>
                {
                    b.Navigation("RepresentativeDependences");
                });
#pragma warning restore 612, 618
        }
    }
}
